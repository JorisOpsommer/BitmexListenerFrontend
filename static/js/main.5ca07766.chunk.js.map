{"version":3,"sources":["components/Home.js","components/Nav.js","redux/actions/tradeActions.js","components/Spinner.js","components/Xbt.js","components/Oi.js","components/Routes.js","redux/actions/statsActions.js","redux/reducers/statsReducer.js","redux/reducers/tradeReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Fragment","className","Component","Nav","state","activeItem","window","location","pathname","split","handleItemClick","e","_ref","name","_this","setState","this","Segment","inverted","Menu","pointing","secondary","react_router_dom","to","Item","active","toLowerCase","onClick","actionTypes","START_TRADES","DONE_TRADES","ERROR_TRADES","startTrades","type","doneTrades","data","payload","errorTrades","tradeActions","loadAllTrades","dispatch","axios","get","headers","Authorization","concat","then","response","catch","loadTradesBetweenDate","startdate","enddate","Spinner","react_spinners","sizeUnit","size","color","Xbt","trades","hourlyBuys","hourlySells","dailyBuys","dailySells","hourlyBuysTotal","hourlySellsTotal","dailyBuysTotal","dailySellsTotal","buildSearchDate","todaymonth","todayday","_this2","_hourlyBuys","_hourlySells","_dailyBuys","_dailySells","_hourlyBuysTotal","_hourlySellsTotal","_dailyBuysTotal","_dailySellsTotal","today","Date","getUTCDate","getUTCMonth","getFullYear","props","startLoadingTrades","trade","rows","currTrade","doc","tradeDate","timestamp","side","push","checkBetween60Minutes","toUTCString","console","log","shift","reverse","date","h","m","nDate","getHours","getMinutes","number","toString","replace","d1","d2","ret","date1","date2","difference","getTime","Math","round","_this3","SegXbtLoop","key","Group","object","Icon","price","numberWithCommas","showDateToHumanInHoursAndMinutes","_this$state","isTradingLoading","length","components_Spinner","Grid","columns","divided","padded","Row","Column","map","connect","trading","tradeReducer","isloading","Oi","es6","width","height","uv","pv","amt","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","fill","Routes","components_Nav","react_router","path","exact","component","START_STATS","DONE_STATS","ERROR_STATS","initialState","stats","statsReducer","arguments","undefined","action","Object","assign","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","StatsReducer","TradeReducer","store","createStore","applyMiddleware","thunk","App","es","components_Routes","components_Home","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ca07766.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"heightcontainer1\">\r\n                    <div className=\"backgroundcolorcontainer1\">\r\n                        <div className=\"homeTitle\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"backgroundcolorcontainer2\">\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import { Segment, Menu } from 'semantic-ui-react'\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Link, Redirect } from \"react-router-dom\";\r\nclass Nav extends Component {\r\n\r\n\r\n    state = { activeItem: window.location.pathname.split('/')[1] }\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name });\r\n    }\r\n\r\n    render() {\r\n        const { activeItem } = this.state\r\n        return (\r\n\r\n            <Segment inverted>\r\n                <Menu inverted pointing secondary>\r\n\r\n                    <Link to=\"/\">\r\n                        <Menu.Item\r\n                            name='Home'\r\n                            active={activeItem.toLowerCase() === 'home'}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/xbt\">\r\n                        <Menu.Item\r\n                            name='XBT'\r\n                            active={activeItem.toLowerCase() === 'xbt'}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/oi\">\r\n                        <Menu.Item\r\n                            name='OI'\r\n                            active={activeItem.toLowerCase() === 'oi'}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/funding\">\r\n                        <Menu.Item\r\n                            name='Funding'\r\n                            active={activeItem.toLowerCase() === 'funding'}\r\n                            onClick={this.handleItemClick}\r\n                        />\r\n                    </Link>\r\n                </Menu>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import axios from 'axios'\r\n// axios.defaults.headers.common['Authorization'] = `Bearer ${\"\"}`;\r\n\r\nexport const actionTypes = {\r\n    START_TRADES: 'START_TRADES',\r\n    DONE_TRADES: 'DONE_TRADES',\r\n    ERROR_TRADES: 'ERROR_TRADES'\r\n};\r\n\r\n\r\nfunction loadAllTrades() {\r\n    return dispatch => {\r\n        dispatch(startTrades());\r\n\r\n        return axios.get(\"http://168.63.17.245:5984/bitmex/_all_docs?startkey=\\\"trade_symbol_XBTUSD_timestamp_\\\"&endkey=\\\"trade_symbol_XBTUSD_timestamp_\\uffff\\\"&include_docs=true\", { headers: { \"Authorization\": `Basic ${\"TOKEN\"}` } })\r\n\r\n            .then(response => response.data)\r\n            .then(data => dispatch(doneTrades(data)))\r\n            .catch(() => dispatch(errorTrades()));\r\n    };\r\n}\r\n\r\nfunction loadTradesBetweenDate(startdate, enddate) {\r\n    return dispatch => {\r\n        dispatch(startTrades());\r\n\r\n        // return axios.get(\"http://168.63.17.245:5984/bitmex/_all_docs?startkey=\\\"trade_symbol_XBTUSD_timestamp_\" + startdate + \"\\\"&endkey=\\\"trade_symbol_XBTUSD_timestamp_\" + enddate + \"\\uffff\\\"&include_docs=true\", { headers: { \"Authorization\": `Basic ${\"TOKEN\"}` } })\r\n        return axios.get(\"http://168.63.17.245:8085/tradesBetweenDate?startdate=\" + startdate + \"&enddate=\" + enddate)\r\n            .then(response => response.data)\r\n            .then(data => dispatch(doneTrades(data)))\r\n            .catch(() => dispatch(errorTrades()));\r\n    };\r\n}\r\n\r\nfunction startTrades() {\r\n    return {\r\n        type: actionTypes.START_TRADES,\r\n    }\r\n}\r\n\r\nfunction doneTrades(data) {\r\n    return {\r\n        type: actionTypes.DONE_TRADES,\r\n        payload: data\r\n    }\r\n}\r\n\r\nfunction errorTrades() {\r\n    return {\r\n        type: actionTypes.ERROR_TRADES,\r\n    };\r\n}\r\n\r\nexport default {\r\n    loadAllTrades,\r\n    loadTradesBetweenDate,\r\n    startTrades,\r\n    doneTrades,\r\n    errorTrades\r\n}\r\n","import { ClimbingBoxLoader } from 'react-spinners';\r\nimport React, { Component } from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinnercenter\">\r\n            <ClimbingBoxLoader sizeUnit={\"px\"} size={30} color={\"#2185d0\"} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { Button, Table, Icon, Segment, Grid } from 'semantic-ui-react'\r\nimport tradeActions from '../redux/actions/tradeActions';\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from './Spinner'\r\n\r\nclass Xbt extends Component {\r\n    state = {\r\n        trades: [{}],\r\n        hourlyBuys: [{}],\r\n        hourlySells: [{}],\r\n        dailyBuys: [{}],\r\n        dailySells: [{}],\r\n        hourlyBuysTotal: 0,\r\n        hourlySellsTotal: 0,\r\n        dailyBuysTotal: 0,\r\n        dailySellsTotal: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _hourlyBuys = [{}]\r\n        let _hourlySells = [{}]\r\n        let _dailyBuys = [{}]\r\n        let _dailySells = [{}]\r\n\r\n        let _hourlyBuysTotal = 0, _hourlySellsTotal = 0, _dailyBuysTotal = 0, _dailySellsTotal = 0;\r\n\r\n        let today = new Date()\r\n        let buildSearchStartDate, buildSearchEndDate, buildSearchDate;\r\n        let todaymonth, todayday;\r\n\r\n        if (today.getUTCDate() < 10) {\r\n            todayday = '0' + today.getUTCDate();\r\n        } else {\r\n            todayday = today.getUTCDate();\r\n        }\r\n\r\n        if (today.getUTCMonth() < 10) {\r\n            todaymonth = '0' + (today.getUTCMonth() + 1)\r\n        }\r\n        else {\r\n            todaymonth = (today.getUTCMonth() + 1);\r\n        }\r\n\r\n        buildSearchDate = today.getFullYear() + '-' + todaymonth + '-' + todayday\r\n        this.props.startLoadingTrades(buildSearchDate, buildSearchDate).then((data) => {\r\n            for (let trade in data.payload.rows) {\r\n                let currTrade = data.payload.rows[trade].doc;\r\n                let tradeDate = new Date(currTrade.timestamp)\r\n\r\n                if (currTrade.side === 'Buy' && currTrade.size > 500000) {\r\n                    _dailyBuys.push(currTrade)\r\n                    _dailyBuysTotal += currTrade.size\r\n                }\r\n\r\n                if (currTrade.side === 'Sell' && currTrade.size > 500000) {\r\n                    _dailySells.push(currTrade)\r\n                    _dailySellsTotal += currTrade.size\r\n                }\r\n\r\n                if (this.checkBetween60Minutes(today.toUTCString(), tradeDate)) {\r\n                    switch (currTrade.side) {\r\n                        case \"Buy\":\r\n                            _hourlyBuys.push(currTrade)\r\n                            _hourlyBuysTotal += currTrade.size\r\n                            break;\r\n                        case \"Sell\":\r\n                            _hourlySells.push(currTrade)\r\n                            _hourlySellsTotal += currTrade.size\r\n                            break;\r\n                        default:\r\n                            console.log(\"side == ??\")\r\n                    }\r\n                }\r\n\r\n            }\r\n            _dailyBuys.shift();\r\n            _dailySells.shift();\r\n            _hourlyBuys.shift();\r\n            _hourlySells.shift();\r\n\r\n            _dailyBuys.reverse();\r\n            _dailySells.reverse();\r\n            _hourlyBuys.reverse();\r\n            _hourlySells.reverse();\r\n\r\n            this.setState({\r\n                dailyBuys: _dailyBuys,\r\n                dailySells: _dailySells,\r\n                hourlyBuys: _hourlyBuys,\r\n                hourlySells: _hourlySells,\r\n                dailyBuysTotal: _dailyBuysTotal,\r\n                dailySellsTotal: _dailySellsTotal,\r\n                hourlyBuysTotal: _hourlyBuysTotal,\r\n                hourlySellsTotal: _hourlySellsTotal\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    showDateToHumanInHoursAndMinutes(date) {\r\n        let nDate = new Date(date)\r\n        let h, m;\r\n        h = nDate.getHours();\r\n        m = nDate.getMinutes();\r\n        if (h < 10)\r\n            h = '0' + h\r\n\r\n        if (m < 10)\r\n            m = '0' + m\r\n        return h + ':' + m\r\n    }\r\n\r\n    numberWithCommas(number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n\r\n    checkBetween60Minutes(d1, d2) {\r\n        let ret = false;\r\n        let date1 = new Date(d1);\r\n        let date2 = new Date(d2)\r\n        let difference = date1.getTime() - date2.getTime();\r\n        if (Math.round(difference / 60000) <= 60)\r\n            ret = true;\r\n\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const SegXbtLoop = (props, key) => (\r\n            <Segment.Group>\r\n                {props.object.side === \"Buy\" ? (\r\n                    <Segment inverted color=\"green\"> <div className=\"divSameHeight\"><p><Icon name=\"caret up\"></Icon>{props.object.price}$</p> <p>{this.numberWithCommas(props.object.size)}</p> </div></Segment>\r\n                ) : (\r\n                        <Segment inverted color=\"red\"> <div className=\"divSameHeight\"><p><Icon name=\"caret down\"></Icon> {props.object.price}$</p> <p>{this.numberWithCommas(props.object.size)}</p> </div></Segment>\r\n                    )}\r\n                <Segment><Icon name=\"clock\"></Icon>{this.showDateToHumanInHoursAndMinutes(props.object.timestamp)}</Segment>\r\n            </Segment.Group>\r\n\r\n        )\r\n\r\n\r\n\r\n        let { dailyBuys, dailySells, hourlyBuys, hourlySells, dailyBuysTotal, dailySellsTotal, hourlyBuysTotal, hourlySellsTotal } = this.state\r\n        if (!this.props.isTradingLoading && dailyBuys.length !== 1) {\r\n            console.log(hourlyBuys)\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"content\">\r\n\r\n                        <Grid columns={4} divided padded>\r\n                            <Grid.Row>\r\n                                <Grid.Column>\r\n                                    <div className=\"whitebackground\">\r\n                                        <Segment.Group>\r\n                                            <Segment color=\"green\" ><h4>Daily buys &nbsp;&nbsp;&nbsp;>500.000</h4>\r\n                                                <div className=\"divSameHeightTitle\">\r\n                                                    <p>{this.numberWithCommas(dailyBuys.length)}&nbsp;rows</p>\r\n                                                    <p> Total&nbsp;{this.numberWithCommas(dailyBuysTotal)}$</p>\r\n                                                </div>\r\n                                            </Segment>\r\n                                            <Segment.Group>\r\n                                                {dailyBuys.map((object, key) => (\r\n                                                    <SegXbtLoop object={object} key={key}></SegXbtLoop>\r\n\r\n                                                )\r\n                                                )}\r\n                                            </Segment.Group>\r\n                                        </Segment.Group>\r\n                                    </div>\r\n\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <div className=\"whitebackground\">\r\n                                        <Segment.Group>\r\n                                            <Segment color=\"red\" ><h4>Daily Sells &nbsp;&nbsp;&nbsp;>500.000</h4>\r\n                                                <div className=\"divSameHeightTitle\">\r\n                                                    <p>{this.numberWithCommas(dailySells.length)}&nbsp;rows</p>\r\n                                                    <p> Total&nbsp;{this.numberWithCommas(dailySellsTotal)}$</p>\r\n                                                </div>\r\n                                            </Segment>\r\n                                            <Segment.Group>\r\n                                                {dailySells.map((object, key) => (\r\n                                                    <SegXbtLoop object={object} key={key}></SegXbtLoop>\r\n\r\n                                                )\r\n                                                )}\r\n                                            </Segment.Group>\r\n                                        </Segment.Group>\r\n                                    </div>\r\n\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <div className=\"whitebackground\">\r\n                                        <Segment.Group>\r\n                                            <Segment color=\"green\"><h4>Hourly buys &nbsp;&nbsp;&nbsp;>50.000</h4>\r\n                                                <div className=\"divSameHeightTitle\">\r\n                                                    <p>{this.numberWithCommas(hourlyBuys.length)}&nbsp;rows</p>\r\n                                                    <p> Total&nbsp;{this.numberWithCommas(hourlyBuysTotal)}$</p>\r\n                                                </div>\r\n                                            </Segment>\r\n                                            <Segment.Group>\r\n                                                {hourlyBuys.map((object, key) => (\r\n                                                    <SegXbtLoop object={object} key={key}></SegXbtLoop>\r\n\r\n                                                )\r\n                                                )}\r\n                                            </Segment.Group>\r\n                                        </Segment.Group>\r\n                                    </div>\r\n\r\n                                </Grid.Column>\r\n                                <Grid.Column>\r\n                                    <div className=\"whitebackground\">\r\n                                        <Segment.Group>\r\n                                            <Segment color=\"red\"><h4>Hourly sells&nbsp;&nbsp;&nbsp;>50.000</h4>\r\n                                                <div className=\"divSameHeightTitle\">\r\n                                                    <p>{this.numberWithCommas(hourlySells.length)}&nbsp;rows</p>\r\n                                                    <p> Total&nbsp;{this.numberWithCommas(hourlySellsTotal)}$</p>\r\n                                                </div>\r\n                                            </Segment>\r\n                                            <Segment.Group>\r\n                                                {hourlySells.map((object, key) => (\r\n                                                    <SegXbtLoop object={object} key={key}></SegXbtLoop>\r\n\r\n                                                )\r\n                                                )}\r\n                                            </Segment.Group>\r\n                                        </Segment.Group>\r\n                                    </div>\r\n\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <Spinner></Spinner>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    trading: state.tradeReducer.trades,\r\n    isTradingLoading: state.tradeReducer.isloading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startLoadingTrades: (startdate, enddate) => dispatch(tradeActions.loadTradesBetweenDate(startdate, enddate))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Xbt);","import React, { Component } from 'react';\r\nimport {\r\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,\r\n} from 'recharts';\r\n\r\nclass Oi extends Component {\r\n    render() {\r\n        const data = [\r\n            {\r\n                name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n            },\r\n            {\r\n                name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n            },\r\n            {\r\n                name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n            },\r\n            {\r\n                name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n            },\r\n            {\r\n                name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n            },\r\n            {\r\n                name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n            },\r\n            {\r\n                name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n            },\r\n        ];\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"content\">\r\n                    <div className=\"whitebackground\">\r\n                        <AreaChart\r\n                            width={500}\r\n                            height={400}\r\n                            data={data}\r\n                            margin={{\r\n                                top: 10, right: 30, left: 0, bottom: 0,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#f48181\" fill=\"#f48181\" />\r\n                        </AreaChart>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Oi;","import React, { Component } from 'react';\r\nimport Xbt from '../components/Xbt'\r\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\nimport App from '../App';\r\nimport Home from './Home'\r\nimport Nav from './Nav'\r\nimport Oi from './Oi'\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"App\">\r\n                    <Nav></Nav>\r\n                    <BrowserRouter>\r\n                        <Route path=\"/home\" exact component={Home} />\r\n                        <Route path=\"/\" exact component={Home} />\r\n                        <Route path=\"/xbt\" exact component={Xbt} />\r\n                        <Route path=\"/oi\" exact component={Oi} />\r\n                        <Route path=\"/funding\" exact component={Home} />\r\n                    </BrowserRouter>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;","import axios from 'axios'\r\n\r\nexport const actionTypes = {\r\n    START_STATS: 'START_STATS',\r\n    DONE_STATS: 'DONE_STATS',\r\n    ERROR_STATS: 'ERROR_STATS'\r\n};\r\n\r\n\r\nfunction loadAllStats() {\r\n    return dispatch => {\r\n        dispatch(startStats());\r\n        return axios.get(\"http://admin:beheerdj@168.63.17.245:5984/bitmex/_all_docs?startkey=\\x22stats_symbol_XBT_timestamp_\\x22&endkey=\\x22stats_symbol_XBT_timestamp_\\uffff\\x22&include_docs=true\")\r\n\r\n            .then(response => response.data)\r\n            .then(data => dispatch(doneStats(data)))\r\n            .catch(() => dispatch(errorStats()));\r\n    };\r\n}\r\n\r\nfunction loadStatsBetweenDate(startdate, enddate) {\r\n    return dispatch => {\r\n        dispatch(startStats());\r\n        return axios.get(\"http://admin:beheerdj@168.63.17.245:5984/bitmex/_all_docs?startkey=\\x22stats_symbol_XBT_timestamp_\" + startdate + \"&endkey=\\x22stats_symbol_XBT_timestamp_\" + enddate + \"\\uffff\\x22&include_docs=true\")\r\n            .then(response => response.data)\r\n            .then(data => dispatch(doneStats(data)))\r\n            .catch(() => dispatch(errorStats()));\r\n    };\r\n}\r\n\r\nfunction startStats() {\r\n    return {\r\n        type: actionTypes.START_STATS,\r\n    }\r\n}\r\n\r\nfunction doneStats(data) {\r\n    return {\r\n        type: actionTypes.DONE_STATS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nfunction errorStats() {\r\n    return {\r\n        type: actionTypes.ERROR_STATS,\r\n    };\r\n}\r\n\r\nexport default {\r\n    loadAllStats,\r\n    loadStatsBetweenDate,\r\n    startStats,\r\n    doneStats,\r\n    errorStats\r\n}\r\n","import { actionTypes } from \"../actions/statsActions\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    stats: [],\r\n    isloading: true,\r\n};\r\n\r\nfunction statsReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.START_STATS:\r\n            return Object.assign({}, state, {\r\n                stats: state.stats.concat(action.payload),\r\n                isloading: true\r\n            });\r\n        case actionTypes.DONE_STATS:\r\n            return Object.assign({}, state, {\r\n                isloading: false,\r\n                stats: action.payload\r\n            });\r\n\r\n        case actionTypes.ERROR_STATS:\r\n            return Object.assign({}, state, {\r\n                isloading: false\r\n            });\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default statsReducer;\r\n","import { actionTypes } from \"../actions/tradeActions\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    trades: [],\r\n    isloading: true,\r\n};\r\n\r\nfunction tradeReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.START_TRADES:\r\n            return Object.assign({}, state, {\r\n                trades: action.payload,\r\n                isloading: true\r\n            });\r\n        case actionTypes.DONE_TRADES:\r\n            return Object.assign({}, state, {\r\n                isloading: false,\r\n                trades: action.payload\r\n            });\r\n\r\n        case actionTypes.ERROR_TRADES:\r\n            return Object.assign({}, state, {\r\n                isloading: false\r\n            });\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default tradeReducer;\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport StatsReducer from './reducers/statsReducer'\r\nimport TradeReducer from './reducers/tradeReducer'\r\n\r\nconst composeEnhancer = (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    statsReducer: StatsReducer,\r\n    tradeReducer: TradeReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport Nav from './components/Nav'\nimport Routes from '../src/components/Routes'\nimport 'semantic-ui/dist/semantic.min.css'\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Provider store={store}>\n          <BrowserRouter>\n            <Routes>\n              <div className=\"App\">\n                {/* <Nav></Nav> HIER NAV??   */}\n                <Home></Home>\n              </div>\n            </Routes>\n          </BrowserRouter>\n        </Provider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './components/Routes'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}